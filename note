import React, { useState, useEffect } from 'react';

const Listbtn = () => {
    const [isOpen, setIsOpen] = useState(false);
    const [isFlow, setIsFlow] = useState(false);
    const [isMobile, setIsMobile] = useState(false);

    useEffect(() => {
        const handleResize = () => {
            setIsMobile(window.innerWidth < 768);
        };
        window.addEventListener('resize', handleResize);
        handleResize();
        return () => window.removeEventListener('resize', handleResize);
    }, []);

    const handleMouseEnter = () => {
        setIsOpen(true);
        setIsFlow(true);
    };

    const handleMouseLeave = () => {
        setIsOpen(false);
        setIsFlow(false);
    };

    const closeSidebar = () => {
        setIsOpen(false);
        setIsFlow(false);
    };

    const desktopSidebarClasses = `
        w-64 bg-gray-900 text-white transition-all duration-300 h-full
        ${isOpen ? 'translate-x-0' : '-translate-x-full'}
        ${isFlow ? 'overflow-y-auto' : 'overflow-hidden'}
    `;

    const mobileSidebarClasses = `
        fixed top-0 left-0 h-full w-64 bg-gray-900 text-white 
        transition-all duration-300 z-50 overflow-y-auto
        ${isOpen ? 'translate-x-0' : '-translate-x-full'}
    `;

    const navigationItems = [
        { path: '/dashboard', label: 'Dashboard', icon: '📊' },
        { path: '/profile', label: 'Profile', icon: '👤' },
        { path: '/student', label: 'Student', icon: '🎓' },
        { path: '/teacher', label: 'Teacher', icon: '👩‍🏫' },
        { path: '/event', label: 'Event', icon: '📅' },
        { path: '/finance', label: 'Finance', icon: '💰' },
        { path: '/food', label: 'Food', icon: '🍽️' },
        { path: '/class', label: 'Class', icon: '🏫' },
        { path: '/chat', label: 'Chat', icon: '💬' },
        { path: '/activity', label: 'Latest Activity', icon: '🔔' },
        { path: '/report', label: 'Report', icon: '📋' },
    ];

    return (
        <div className="relative h-screen">
            {/* Trigger Zone */}
            <div
                onMouseEnter={handleMouseEnter}
                onMouseLeave={handleMouseLeave}
                className="fixed top-0 left-0 h-full w-3 z-40 bg-transparent hover:bg-blue-500 hover:bg-opacity-20 transition-all duration-200"
                title="Hover to open sidebar"
            >
                <div className={isMobile ? mobileSidebarClasses : desktopSidebarClasses}>
                    <div className="flex flex-col h-full bg-gradient-to-b from-blue-800 to-blue-900">
                        {/* Header */}
                        <div className="flex items-center p-6 border-b border-blue-700">
                            <div className="flex items-center justify-center w-12 h-12 bg-gradient-to-br from-orange-400 to-orange-600 rounded-xl shadow-lg">
                                <span className="text-xl font-bold text-white">A</span>
                            </div>
                            <div className="ml-4">
                                <h1 className="text-xl font-bold text-white">Akademi</h1>
                                <p className="text-xs text-blue-200">School Dashboard</p>
                            </div>
                        </div>

                        {/* Navigation Menu */}
                        <nav className="flex-1 px-4 py-6 space-y-2">
                            {navigationItems.map((item, index) => (
                                <button
                                    key={index}
                                    onClick={() => {
                                        console.log(`Navigating to ${item.path}`);
                                        if (isMobile) closeSidebar();
                                    }}
                                    className="flex items-center w-full px-4 py-3 text-left text-white rounded-lg hover:bg-blue-700 hover:bg-opacity-50 transition-all duration-200 group"
                                >
                                    
                                    <span className="font-medium">{item.label}</span>
                                </button>
                            ))}
                        </nav>

                        {/* Footer */}
                        <div className="p-4 border-t border-blue-700">
                            <div className="text-center">
                                <p className="text-xs text-blue-300 font-semibold">
                                    Akademi Dashboard v2.0
                                </p>
                                <p className="text-xs text-blue-400 mt-1">
                                    School Management System
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            {/* Mobile Overlay */}
            {isMobile && isOpen && (
                <div
                    onClick={closeSidebar}
                    className="fixed inset-0 bg-black bg-opacity-50 z-40 animate-fade-in"
                />
            )}

            {/* Mobile Toggle Button (visible when sidebar is closed) */}
            {isMobile && !isOpen && (
                <button
                    onClick={() => setIsOpen(true)}
                    className="fixed top-4 left-4 z-30 p-3 bg-blue-600 text-white rounded-lg shadow-lg hover:bg-blue-700 transition-colors duration-200"
                >
                    <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
                    </svg>
                </button>
            )}

            <style jsx>{`
                @keyframes fade-in {
                    from { opacity: 0; }
                    to { opacity: 1; }
                }
                .animate-fade-in {
                    animation: fade-in 0.3s ease-out;
                }
            `}</style>
        </div>
    );
};

export default Listbtn;